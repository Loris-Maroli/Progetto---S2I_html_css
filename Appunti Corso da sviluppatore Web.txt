Appunti Corso da sviluppatore Web

IMPORTNANTE --> Ogni volta che non sei sicuro di un particolare elemento, esegui una rapida ricerca su Google per " MDN <some-element>"

IMPORTANTE --> Per dubbi sulla SEO andare qui (https://www.link-assistant.com/news/html-tags-for-seo.html)

IMPORTANTE --> Grandezze per il responsive 
                576px per telefoni in portrait
                768px per tablet
                992px per laptop
                1200px per dispositivi di grandi dimensioni





Git un VCS (Version Control System)

Ecco alcuni comandi comuni per l'utilizzo di Git:

git init - inizializza un nuovissimo repository Git e inizia a tenere traccia di una directory esistente. Aggiunge una sottocartella nascosta all'interno della directory esistente che ospita la struttura dati interna richiesta per il controllo della versione.

git clone - crea una copia locale di un progetto già esistente in remoto. Il clone include tutti i file, la cronologia e i rami del progetto.

git add - mette in scena un cambiamento. Git tiene traccia delle modifiche alla base di codice di uno sviluppatore, ma è necessario organizzare e acquisire un'istantanea delle modifiche per includerle nella cronologia del progetto. Questo comando esegue la gestione temporanea, la prima parte del processo in due passaggi. Eventuali modifiche messe in scena diventeranno parte dello snapshot successivo e parte della cronologia del progetto. La gestione temporanea e il commit separati offrono agli sviluppatori il controllo completo sulla cronologia del loro progetto senza modificare il modo in cui codificano e lavorano.

git commit - salva l'istantanea nella cronologia del progetto e completa il processo di rilevamento delle modifiche. In breve, un commit funziona come scattare una foto. Tutto ciò che è stato messo in scena con git adddiventerà parte dello snapshot con git commit.

git status - mostra lo stato delle modifiche come non tracciate, modificate o messe in scena.

git branch - mostra i rami su cui si sta lavorando localmente.

git merge - unisce insieme le linee di sviluppo. Questo comando viene tipicamente utilizzato per combinare le modifiche apportate su due rami distinti. Ad esempio, uno sviluppatore si unirebbe quando desidera combinare le modifiche da un ramo di funzionalità al ramo principale per la distribuzione.

git pull - aggiorna la linea di sviluppo locale con gli aggiornamenti dalla sua controparte remota. Gli sviluppatori utilizzano questo comando se un compagno di squadra ha effettuato il commit su un ramo remoto e desidera riflettere tali modifiche nel proprio ambiente locale.

git push - aggiorna il repository remoto con eventuali commit e ffettuati localmente su un ramo. 




Icone per Footer:
https://cdnjs.com/libraries/font-awesome




Sito di Bootstrap "www.getobootstrap.com"

Dove trovare icone per il tuo sito web = Inserire questa stringa nella head (<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">) e poi prendere le icone su https://icons.getbootstrap.com

Dove trovare immagini "image picsum" o "pixabay"

Creare favicon personalizzata su https://www.favicon.cc




Etichetta canonica
Quando hai alcune pagine con contenuti identici, puoi utilizzare un tag canonico per indicare ai motori di ricerca a quale pagina deve essere data la priorità.

In HTML, potrebbe assomigliare a questo:

<link href="URL" rel="canonical">

Peviene la cannibalizzazione . Se hai due pagine simili ed entrambe vengono indicizzate, iniziano a competere tra loro nei risultati di ricerca. Questo è un drenaggio sia delle tue risorse che delle tue possibilità di classificarti.

Avvia WebSite Auditor , vai su Struttura del sito > Audit del sito e presta attenzione alla sezione On-page , ovvero a Duplica titoli e Duplica meta description .

Nel caso in cui disponi di alcuni URL con contenuto identico, specifica un elemento <link rel="canonical"> nell'HTML della pagina.




Schema markup
Lo schema può diventare un po' complicato e non è qualcosa che puoi scrivere a mano. Il modo migliore per applicare lo schema a una pagina è utilizzare l'Assistente per il markup dei dati strutturati (https://www.google.com/webmasters/markup-helper/u/0/). Lì puoi scegliere il tipo di schema, inserire il tuo URL, quindi selezionare semplicemente il testo sulla pagina e contrassegnarlo.





Il protocollo Open Graph (https://ogp.me/) - I tag Open Graph (OG) vengono inseriti nella sezione <head> di una pagina e consentono a qualsiasi pagina web di diventare un oggetto ricco nei social network. Tieni presente che il titolo OG deve contenere tra 60 e 90 caratteri, altrimenti potrebbe essere troncato. La descrizione OG si ritiene buona norma mantenerla attorno ai 200 caratteri. L'immagine OG ha una risoluzione consigliata di 1200x627 pixel e una dimensione fino ai 5 MB.

Una volta che hai finito con i tuoi meta tag OG, puoi controllare come appare il tutto con l'aiuto di Open Graph Object Debugger, uno strumento creato da Facebook.

Puoi anche verificare la presenza dei tuoi tag OG con WebSite Auditor . Per farlo, vai su Struttura del sito > Pagine e passa alla scheda Open Graph predefinita e al markup dei dati strutturati . Mostrerà se il markup OG è disponibile su tutte le tue pagine. Inoltre, raccoglierà titoli, descrizioni e URL degli OG per le immagini OG.




Esistono molti tag semantici HTML5, ma diamo un'occhiata a quelli più comuni e ampiamente utilizzati nella costruzione di siti e nella SEO (in ordine alfabetico) e scopriamo cosa significano:

<header> — definisce il contenuto della sezione di intestazione della pagina, documento o sezione;

<nav> — questo tag definisce una sezione di pagina con collegamenti di navigazione;

<main> — questo tag aiuta a definire la parte più importante e significativa del contenuto della pagina (a differenza di <article>, il contenuto racchiuso in <main> è più piccolo e può trovarsi all'interno della sezione <article>);

<article> — questo tag viene utilizzato per definire un contenuto ampio e significativo (un articolo, un post sul forum, ecc.) che costituisce un'unità autonoma;

<footer> — questo tag definisce il contenuto del piè di pagina della pagina, del documento o della sezione;

<audio> — questo tag viene utilizzato per definire un contenuto ampio e significativo (un articolo, un post sul forum, ecc.) che costituisce un'unità autonoma;

<details> — viene utilizzato per descrivere un widget da cui l'utente può ottenere informazioni aggiuntive o controlli su richiesta;

<dialog> — definisce una finestra di dialogo o una sottofinestra con cui l'utente può interagire in caso di necessità;

<embed> — questo tag viene utilizzato per incorporare un contenuto multimediale come video, suoni o qualsiasi app esterna;

<picture> — viene utilizzato per definire un contenitore per più origini di immagini;

<source> — mostra fonti alternative per gli elementi multimediali incorporati come <audio> o <video>;

<summary> — viene utilizzato insieme all'elemento <details> per fornire un riepilogo visibile all'utente, quindi quando l'utente fa clic sul riepilogo, le informazioni aggiuntive o il contenuto inserito all'interno dell'elemento <details> diventano visibili;

<svg> — viene utilizzato per incorporare un file SVG in un documento HTML;

<time> — questo tag viene utilizzato per codificare date e orari (compleanni, eventi, riunioni, ecc.) in un formato leggibile dalla macchina;

<video> — incorpora contenuto video in un documento HTML senza richiedere alcun plug-in aggiuntivo per riprodurre un video.

Inoltre, è possibile utilizzare il modulo Struttura del sito > Audit del sito di WebSite Auditor . Qui, guarda la sezione Pagine con errori e avvisi HTML W3C per vedere l'elenco delle pagine con errori nel codice HTML. Per esaminare ogni pagina in dettaglio, fai clic sul segno della freccia nella colonna Errori di convalida HTML.




Titolo Pagina:
Se vuoi assicurarti che il tuo tag title abbia il numero di caratteri e la lunghezza in pixel giusti, c'è uno strumento gratuito rapido e facile da usare chiamato "SERPsim", come regola generale, i titoli con una lunghezza inferiore a 60 caratteri si adattano alla maggior parte degli schermi.

Per testare i title tag, puoi utilizzare i seguenti strumenti online.

Site Audit di SEMrush - Questo strumento di SEMrush ti aiuterà a controllare e identificare i problemi sul tuo sito Web, mostrandoti anche se sul tuo sito ci sono titoli o metadescription duplicati. Vedrai anche le pagine in cui mancano title tag.

Content Audit - Questo strumento fornisce una tabella per analizzare il contenuto da una prospettiva di scrittura (mentre Site Audit offre una prospettiva SEO tecnica). Dopo che questo strumento ha eseguito la scansione del sito, è possibile esportare il report in XLSX e disporre di un file con tutte le pagine esistenti insieme ai loro titoli e meta description.

Yoast SEO Plugin per WordPress: questo plugin controlla la tua SEO on-page, ti offre suggerimenti per i titoli e le descrizioni delle pagine e include persino un editor di snippet per testare come apparirà il tuo risultato su Google.

Per verificare la lunghezza dei titoli, avvia WebSite Auditor , vai su Struttura del sito > Audit del sito > Sulla pagina e visualizza un elenco completo di titoli che superano la lunghezza consigliata:

Meta Descrizone: 
Non esiste un limite tecnico alla lunghezza della meta descrizione, ma generalmente Google mostrerà solo i primi 160 caratteri nel tuo snippet . Il consiglio è lo stesso del tag del titolo: rendilo lungo quanto vuoi, ma assicurati che le parole chiave e altre informazioni importanti siano menzionate più vicino all'inizio.
Puoi controllare le tue meta descrizioni in WebSite Auditor . Nel tuo progetto, vai su Struttura del sito > Verifica del sito > Sulla pagina e verifica se qualcuna delle tue meta descrizioni supera la lunghezza consigliata.

A proposito, per ottimizzare i tag del titolo e la meta descrizione, puoi utilizzare l'intelligenza competitiva all'interno dell'editor di contenuti SEO in WebSite Auditor. 

Vai su Page Audit > Content Audit e incolla l'URL della pagina che stai ottimizzando e la parola chiave target. Lo strumento analizzerà la tua pagina insieme ai primi 10 concorrenti nei risultati di ricerca. Vedrai come la tua parola chiave target viene utilizzata nei tag del titolo e nelle meta descrizioni dei tuoi concorrenti.

Inoltre, puoi passare all'editor di contenuti e ottimizzare il testo direttamente nell'app. Qui puoi scrivere il titolo e la meta descrizione e vedere come apparirà il tuo meta snippet nei risultati di ricerca.




L' Outliner HTML5 è uno strumento utile per controllare la struttura del documento di una pagina. https://gsnedders.html5.org/outliner/




WYSIWYG è l'acronimo che sta per l'inglese What You See Is What You Get ("quello che vedi è quello che ottieni" o "ottieni quanto vedi").




Tipografia: 
Web Open Font Format (.WOFF) - Open Type Font (.OTF) - True Type Font (.TTF)

Un font standard in TTF permette di memorizzare 26 caratteri alfabetici (A-Z), dieci numeri (0-9) e una manciata di font extra come la punteggiatura, i caratteri speciali (!, ?; %; * etc), al contrario un font in OTF oltre a questi caratteri standard permette di aggiungere molteplici altri segni fino a un massimo di 65.000 caratteri (interessante no?)

Dove trovare i FONT:
Website	        Price	        Quality	        Selection

Font Squirrel	Free	        Hit-or-Miss	Huge
Google Fonts	Free	        Good	        Decent
Fontspring	Expensive	Excellent	Huge

Use a font-size between 14px and 20px for the body element.
Use “curly quotes” and apostrophes with the &rsquo;, &lsquo;, &rdquo;, and &ldquo; HTML entities.
Use proper dashes (&ndash;, &mdash;) and other symbols (&copy;).
Don’t use text-decoration: underline except for hover states.
Use real italic fonts over synthesized ones if not it’s too much of a performance burden.




Consigli social:
Schema.org microdata lets you alter the appearance of your site in search engine results.
Twitter cards define how your web page is displayed in tweets.
Open Graph metadata changes how Facebook shares your content.

HTML

L'HTML serve ad aggiungere significato al contenuto grezzo contrassegnandolo.
I CSS servono per la formattazione del contenuto contrassegnato.
JavaScript serve a rendere interattivi il contenuto e la formattazione.

La stringa <title> Titolo del sito </title> viene visualizzata dai browser nella scheda della tua pagina e Google lo visualizza nei risultati dei motori di ricerca.

Le intestazioni sono come i titoli, ma in realtà vengono visualizzate sulla pagina. L'HTML fornisce sei livelli di intestazioni e gli elementi corrispondenti sono: <h1>, <h2>, <h3>, … , <h6>. Più alto è il numero, meno prominente è l'intestazione.

Ogni volta che circondi una porzione di testo con tag HTML, aggiungi un nuovo significato a quel testo. Il confezionamento del contenuto nei <ul> tag indica al browser che tutto ciò che è all'interno dovrebbe essere visualizzato come un "Unordered List". Per denotare singoli elementi in quell'elenco, racchiudili in <li> tag.

Perché usiamo i termini “emphasis” e “strong” invece di “italic” e “bold”. Questo ci porta a un’importante distinzione tra HTML e CSS. Il markup HTML dovrebbe fornire informazioni semantiche sui tuoi contenuti, non informazioni di presentazione. HTML5 ha tentato di creare una chiara separazione tra la struttura di un documento e la sua presentazione. Pertanto, <i> (italic) è stato sostituito con <em> (emphasis) e <b> (bold) è stato sostituito da <strong>.

L'HTML condensa spazi consecutivi, tabulazioni o ritorni a capo (noti insieme come "spazi bianchi") in un unico spazio.

Gli sviluppatori web spesso impostano il proprio editor di testo per limitare la lunghezza della riga a circa 80 caratteri.

In modo generale <br/>, <hr/> dovrebbe avere un significato quando li si utilizza: non usarli quando vuoi solo visualizzare una linea per motivi estetici. Per questo, ti consigliamo di utilizzare la borderproprietà CSS. Un altro modo di pensare all'elemento <hr/> è che ha meno significato della separazione creata da un nuovo elemento di intestazione, ma più significato di un nuovo paragrafo.

HREF --> attributo / <a> --> elemento / "hello" --> contenuto

Ora che lavoriamo con i link, dobbiamo capire come è strutturato un sito web. Per i nostri scopi, un sito web è semplicemente una raccolta di file HTML organizzati in cartelle. Per fare riferimento a tali file dall'interno di un altro file, Internet utilizza "localizzatori di risorse uniformi" (URL).

URL --> Uniform Resource Locators

I collegamenti assoluti (absolute), relativi (relative) e relativi alla radice (root-relative) si riferiscono al valore dell'attributo href.

I collegamenti “assoluti” rappresentano il modo più dettagliato con cui puoi fare riferimento a una risorsa web. Iniziano con lo "schema" (tipicamente http://o https://), seguito dal nome di dominio del sito Web, quindi dal percorso della pagina Web di destinazione. È possibile utilizzare collegamenti assoluti per fare riferimento a pagine del tuo sito web, ma codificare il tuo nome di dominio ovunque può creare situazioni complicate. Di solito è un'idea migliore riservare collegamenti assoluti solo per indirizzare gli utenti a un sito Web diverso.

I collegamenti "relativi" puntano a un altro file nel tuo sito web dal punto di vista del file che stai modificando. È implicito che lo schema e il nome del dominio siano gli stessi della pagina corrente, quindi l'unica cosa che devi fornire è il percorso. (..) Due punti consecutivi in ​​un percorso file rappresentano un puntatore alla directory principale perchè normalmente i nostri collegamenti sono relativi alla posizione del file di partenza. I collegamenti relativi sono utili perché ti consentono di spostare intere cartelle senza dover aggiornare tutti gli href caratteri dei tuoi <a> elementi, ma possono creare un po' di confusione quando tutti i collegamenti iniziano con un gruppo di punti. Sono ideali perciò per fare riferimento alle risorse nella stessa cartella o in una sezione autonoma del tuo sito web, ma non bisogna abusarne!

I collegamenti “relativi alla radice” sono simili alla sezione precedente, ma invece di essere relativi alla pagina corrente, sono relativi alla “radice” dell'intero sito web. Ad esempio, se il tuo sito web è ospitato su our-site.com, tutti gli URL relativi alla root saranno relativi a our-site.com. L'unica differenza tra un collegamento relativo alla radice e uno relativo è che il primo inizia con una barra. Quella barra iniziale rappresenta la radice del tuo sito. Puoi aggiungere più cartelle e file al percorso dopo la barra iniziale, proprio come i collegamenti relativi. I collegamenti relativi alla radice sono alcuni dei tipi di collegamenti più utili. Sono sufficientemente espliciti da evitare la potenziale confusione dei collegamenti relativi, ma non sono eccessivamente espliciti come i collegamenti assoluti. Ne vedrai molti durante la tua carriera di sviluppatore web, specialmente nei siti web più grandi dove è difficile tenere traccia dei riferimenti relativi.


Nella barra degli indirizzi vedrai che tutti i nostri spazi sono stati sostituiti con %20. Gli spazi non sono consentiti negli URL e questa è la codifica speciale utilizzata per rappresentarli. Invece di uno spazio, dovresti sempre usare un trattino, come abbiamo fatto in questo tutorial. È anche una buona idea utilizzare tutti i caratteri minuscoli per coerenza.

Nota come esiste una connessione diretta tra i nomi dei nostri file/cartelle e l'URL della pagina web che rappresentano. I nomi delle nostre cartelle e file determinano gli slug per le nostre pagine web. Sono visibili all'utente, il che significa che dovresti impegnarti tanto nel nominare i tuoi file quanto nella creazione del contenuto che contengono.

Queste convenzioni di denominazione si applicano a tutti i file del tuo sito, non solo ai file HTML. I file CSS, i file JavaScript e le immagini dovrebbero evitare spazi e avere anche maiuscole coerenti.

Un immagine vettoriale è un immagine che anche se ingrandita non perde di qualità.

Una query è una domanda o un richiesta di informazioni.

I caratteri <, > e & sono chiamati "caratteri riservati" perché non è consentito inserirli in un documento HTML senza essere codificati. Questo perché significano qualcosa nella sintassi HTML: <inizia un nuovo tag, >termina un tag e, come stiamo per imparare, & attiva un'entità HTML.





----> Comandi Rapidi <----

ctrl+s = salva pagina
ctrl+n = nuova pagina
ctrl+tab = naviga tra le pagine
ctrl+t = barra di ricerca
ctrl+r = ricaricare la pagina



----> Stringe di codice HTML <----

IMPORTNANTE --> Se non mi ricordo una stringa sempre controllare Mozilla Developer Network (MDN), basta fare una ricerca su Goggle con scritto: MDN <tag generico>


Questo tipo di stringa verrà completamente ignorata dal browser web per i file .html
 <!-- Qui ci scrivo un commento per me --> 

Questo tipo di stringa verrà completamente ignorata dal browser web per i file .css
/* Qui ci scrivo un commento per me */

<!DOCTYPE html> = Il compito di DOCTYPE è quello di spiegare alle programmatrici e ai programmatori e ai browser di quale definizione del tipo di documento (o Document Type Definition in inglese, abbreviato in DTD) si tratta e di come dovrebbe essere reso un sito web.

<html> </html> = Signifca Hyper Text Markup Language e comprende tutto ciò che fa parte del sito web.

<head> </head> = Racchiude le informazioni base della pagina a livello di metadati, che non saranno pertanto visibili nel sito.

<title> </title> = Serve ad identificare il titolo della pagina nelle SERP (Search Engine Results Page) di Google.

<body> </body> = Racchiude tutti i contenuti ipertestuali ( testo, link, immagini, tag HTML, ecc. ) che saranno visualizzati sul browser dell'utente.

<h1> </h1> - <h2> </h2> - <h3> </h3> - <h4> </h4> - <h5> </h5> - <h6> </h6> = Il tag h1 è l'header del codice HTMl il più significativo definisce il titolo da un punto di vista gerarchico; da un punto di vistra pratico gli altri sono gli strumenti con cui possiamo definire e descrivere i vari argomenti e sottoargomenti che trattiamo all'interno del contenuto. Ad esempio: il titolo principale è l'h1, il paragrafo o i paragrafi principali dovranno essere titolati con un H2, i successivi sotto paragrafi interni con h3 e a procedere.

<p> </p> = Signifca Paragraph e contiene un paragrafo di testo, è uno dei principali tag di formattazione del testo del linguaggio HTML.

<ul> </ul> = Signfica Unordered List e serve a definire un elenco puntato.

<ol> </ol> = Signifca Ordered List e serve a definire un elenco numerato.

<li> </li> = Signifca List Item e serve a definire tutti gli elementi compresi all'interno di un elenco numerato o puntato.

<em> </em> = Significa Emphasis e serve per rendere il testo in corsivo.

<strong> </strong> = Serve per rendere il testo in grassetto.

<br/> = Significa Line Brake element e ha un unico scopo preciso, serve e creare uno spazio a capo tra le righe in un blocco di testo.

<hr/> = Significa Thematic brake (Horizontal Rule) e rappresenta una pausa tematica tra gli elementi a livello di paragrafo: ad esempio, un cambio di scena in una storia o uno spostamento di argomento all'interno di una sezione. Serve per creare una linea orizzontale nella pagina web com separazione.

<a> </a> = Elemento ancora che con il suo attributo href crea un collegamento ipertestuale a pagine web, file, indirizzi email, posizioni nella stessa pagina o qualsiasi altra cosa che un URL possa indirizzare.

target="_blank" = attributo che si utilizza in questo particolare modo per chiedere al browser di aprire il collegamento in una nuova scheda/finestra.

<img/> = Serve a includere le immagini nel sito web con il suo attributo src che punta all'immagine desideri visualizzare.

alt = aggiungere altattributi ai tuoi <img/>elementi è una procedura consigliata. Definisce un "testo alternativo" all'immagine visualizzata. Ciò ha un impatto sia sui motori di ricerca che sugli utenti con browser di solo testo (ad esempio, persone che utilizzano software di sintesi vocale a causa di problemi di vista).

<meta charset="UTF-8/> = Contiene al suo interno un set di caratteri come una spece di alfabeto digitale per il nostro sito web. Al giorno d'oggi, UTF-8 è una sorta di alfabeto universale per Internet. Ogni pagina web che crei dovrebbe avere questa riga nel suo file <head>.

<link/> = L' elemento HTML specifica le relazioni tra il documento corrente e una risorsa esterna. Questo elemento viene comunemente utilizzato per collegarsi ai fogli di stile , ma viene utilizzato anche per stabilire le icone del sito (sia icone di stile "favicon" che icone per la schermata iniziale e le app sui dispositivi mobili), tra le altre cose.

rel = L' relattributo definisce la relazione tra la risorsa e il documento HTML. Il valore di gran lunga più comune è stylesheet, ma esistono alcune altre opzioni.




CSS

----> Stringe di codice CSS <----

color: #555555;
background-color: #555555;
font-size: 36px
font-family: "Helvetica", "Arial", sans-serif;

La font-weight proprietà definisce il "grassetto" del testo in un elemento e la font-styleproprietà indica se è in corsivo o meno.

While it is possible to combine the best of both worlds, it gets complicated real quick. Our recommendation is to stick to the 1x and 2x version of srcset for images less than 600 pixels wide, use the srcset plus sizes method from the previous section for bigger photos, and reserve <picture> for when you’re trying to do something real fancy with your designer.





